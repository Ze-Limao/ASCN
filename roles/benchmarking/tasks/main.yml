- name: Define benchmark files
  set_fact:
    benchmark_files:
      - "./benchmarking/Benchmark.jmx"
      # we can add more files

- name: Alter apps IPs and Ports in .jmx files
  ansible.builtin.replace:
    path: "{{ item }}"
    regexp: "{{ item_regex }}"
    replace: "{{ item_replace }}"
  loop:
    - { item: "{{ benchmark_files[0] }}", item_regex: '(.*)<stringProp name="HTTPSampler.domain">.*', item_replace: '\1<stringProp name="HTTPSampler.domain">{{ app_service_ip.stdout }}</stringProp>' }
    - { item: "{{ benchmark_files[0] }}", item_regex: '(.*)<stringProp name="HTTPSampler.port">.*', item_replace: '\1<stringProp name="HTTPSampler.port">{{ app_service_port.stdout }}</stringProp>' }
  when: benchmark_solution is defined and (benchmark_solution == "yes" or benchmark_solution == "true")

# JMeter

- name: Download JMeter Binaries (Binaries - version 5.5)
  get_url:
    url: "https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-5.5.tgz"
    dest: "~/apache-jmeter-5.4.3.tgz"

- name: Unzip JMeter Binaries
  unarchive:
    src: "~/apache-jmeter-5.4.3.tgz"
    dest: "~/"
    remote_src: yes

- name: Copy .jmx files to JMeter
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/benchmarking/{{ item }}"
    dest: "~/apache-jmeter-5.5/{{ item }}"
  with_items:
    - "Benchmark1.jmx"
  
# Logs

- name: Get current date and time for the benchmarking logs
  set_fact:
    date_time: "{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}"
  register: date_time

- name: Benchmarking 1
  command: >
    ~/apache-jmeter-5.5/bin/jmeter -n -t {{ playbook_dir }}/benchmarking/Benchmark.jmx -l {{ playbook_dir }}/benchmarking/logs/Benchmark_{{ date_time.ansible_facts.date_time }}.log
